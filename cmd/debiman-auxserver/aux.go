// auxserver serves HTTP redirects and cookie handlers.
package main

import (
	"flag"
	"log"
	"net/http"

	"github.com/Debian/debiman/internal/aux"
	"github.com/Debian/debiman/internal/redirect"
)

var (
	indexPath = flag.String("index",
		"/srv/man/auxserver.idx",
		"Path to an auxserver index generated by debiman")

	listenAddr = flag.String("listen",
		"localhost:2431",
		"host:port address to listen on")
)

func main() {
	flag.Parse()

	log.Printf("debiman auxserver loading index from %q", *indexPath)

	idx, err := redirect.IndexFromProto(*indexPath)
	if err != nil {
		log.Fatal(err)
	}

	server := aux.NewServer(idx)

	http.HandleFunc("/jump", server.HandleJump)
	http.HandleFunc("/", server.HandleRedirect)

	// TODO: implement index swapping. verify a dummy redirect works before swapping index

	log.Printf("Loaded %d manpage entries, %d suites, %d languages from index %q",
		len(idx.Entries), len(idx.Suites), len(idx.Langs), *indexPath)

	log.Printf("Starting HTTP listener on %q", *listenAddr)
	log.Fatal(http.ListenAndServe(*listenAddr, nil))
}
